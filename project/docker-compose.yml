version: '3'

services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/Dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    build:
      context: ./../auth-service
      dockerfile: ./../auth-service/Dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5433 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    build:
      context: ./../mailer-service
      dockerfile: ./../mailer-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAILER_DOMAIN: localhost
      MAILER_HOST: mailhog
      MAILER_PORT: 1025
      MAILER_ENCRYPTION: none
      MAILER_USERNAME: ""
      MAILER_PASSWORD: ""
      FROM_NAME: "User"
      FROM_ADDRESS: user@gmail.com

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5433:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo'
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
      
  rabbitmq:
    image: 'rabbitmq'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/